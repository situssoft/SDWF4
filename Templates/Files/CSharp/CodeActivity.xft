<?xml version="1.0"?>
<Template author="Christopher Hall" version="1.0">
	
	<Config
		  name        = "Code Activity"
		  icon        = "C#.File.NewClass"
		  category    = "C#"
		  subcategory = "Workflow"
		  defaultname = "CodeActivity${Number}.cs"
		  language    = "C#"/>
	 
	<Description>An activity with execution logic written in code</Description>
	
	<References>
		<Reference include="System.Activities" />
	</References>

	<!--
	Special new file templates:
		${StandardNamespace}        -> Standardnamespace of the current project or FileNameWithoutExtension
		${FullName}                 -> Full generated path name
		${FileName}                 -> File name with extension
		${FileNameWithoutExtension} -> File name without extension
		${Extension}                -> Extension in the form ".cs"
		${Path}                     -> Full path of the file
		${ClassName}                -> Class name (generally FileNameWithoutExtension w/o 'bad' characters)
	-->

	<Files>
		<File name="${FullName}" language="C#"><![CDATA[${StandardHeader.C#}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Activities;

namespace ${StandardNamespace} 
{
    public sealed class ${FileNameWithoutExtension} : CodeActivity
    {
        // Define an activity input argument of type string
        public InArgument<string> Text { get; set; }

        // If your activity returns a value, derive from CodeActivity<TResult>
        // and return the value from the Execute method.
        protected override void Execute(CodeActivityContext context)
        {
            // Obtain the runtime value of the Text input argument
            string text = context.GetValue(this.Text);
        }
    }
}]]></File>
	</Files>
	
	<AdditionalOptions/>
</Template>

